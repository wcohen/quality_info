#! /bin/bash
# a script to mechanically generate a bunch of compilation variants
#
#  Before running this script you will need to setup spack with as mentioned
#  in https://spack.readthedocs.io/en/latest/tutorial_basics.html
#  with something like:
#
#  $ . share/spack/setup-env.sh
#
#
#Scope: Platforms {RHEL8,Rawhide}
#        Compilers {GCC,LLVM}
#       Architectures {x86-64,ppc64le} (?)
#       CFLAGS {-O0,-O2} x {-flto,} x {-g,-gdwarf-4,-gdwarf-5} x {-gsplit-dwarf,}
#       Consumers {systemtap,gdb,lldb} (?)
#       upon some nontrivial program, like systemtap

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
. "$DIR/quality_driver"

build_spack () {
  local compiler="$1"
  local options="$2"
  local variant="$3"
  local package="$4"
  case $compiler in
    gcc) 
      ;;
    clang)
      ;;
    *)
      echo "unknown compiler $compiler"
      exit 1
      ;;
    esac
    unset spack_args
    spack_args=("install" "${package}"
		"cflags=${options}"
		"cxxflags=${options}"
		"%${compiler}"
		"target=${arch}" )
    echo building "spack ${spack_args[@]}"
    spack "${spack_args[@]}"
}

driver "$1" "$2" "build_spack"
